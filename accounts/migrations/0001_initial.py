# Generated by Django 3.2 on 2021-06-14 11:17

import accounts.managers
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(max_length=30, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=True, verbose_name='staff')),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_student', models.BooleanField(default=False)),
                ('is_lecturer', models.BooleanField(default=False)),
                ('is_parent', models.BooleanField(default=False)),
                ('student_number', models.IntegerField(blank=True, null=True)),
                ('national_ID', models.IntegerField(blank=True, null=True, unique=True)),
                ('official_picture', models.ImageField(blank=True, null=True, upload_to='pics')),
                ('dob', models.DateField(default=django.utils.timezone.now)),
                ('phone', models.IntegerField(blank=True, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=100)),
                ('intake', models.CharField(blank=True, choices=[('January', 'January'), ('February', 'February'), ('March', 'March'), ('April', 'April'), ('May', 'May'), ('June', 'June'), ('July', 'July'), ('August', 'August'), ('September', 'September'), ('October', 'October'), ('November', 'November'), ('December', 'December')], max_length=100, null=True)),
                ('next_of_kin_firstname', models.CharField(blank=True, max_length=200, null=True)),
                ('next_of_kin_middlename', models.CharField(blank=True, max_length=200, null=True)),
                ('next_of_kin_lastname', models.CharField(blank=True, max_length=200, null=True)),
                ('next_of_kin_relationship', models.CharField(blank=True, choices=[('Brother', 'Brother'), ('Mother', 'Mother'), ('Father', 'Father'), ('Gradfather', 'Gradfather'), ('Grandmother', 'Grandmother'), ('Uncle', 'Uncle'), ('Aunt', 'Aunt'), ('Cousin', 'Cousin'), ('Other', 'Other')], max_length=40, null=True)),
                ('next_of_kin_phone', models.IntegerField(blank=True, null=True)),
                ('registration_number', models.CharField(max_length=100, unique=True)),
                ('next_of_kin', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', accounts.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AllLecturersAnnouncements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('announcement', models.TextField(max_length=1000)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Lecturer Announcement',
                'verbose_name_plural': 'Lecturer Announcements',
            },
        ),
        migrations.CreateModel(
            name='AllStudentsAnnouncements',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('announcement', models.TextField(max_length=1000)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Student Announcement',
                'verbose_name_plural': 'All Students Announcements',
            },
        ),
        migrations.CreateModel(
            name='Classes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Class_Name', models.CharField(max_length=100, unique=True)),
                ('Class_code', models.IntegerField(unique=True)),
                ('Registration_Date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes ',
            },
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=100, unique=True)),
                ('course_ID', models.IntegerField(blank=True, null=True, unique=True)),
                ('course_description', models.TextField(blank=True, max_length=1000, null=True)),
                ('duration', models.CharField(max_length=50)),
                ('img', models.ImageField(blank=True, null=True, upload_to='courses_images')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='CourseUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_name', models.CharField(max_length=50)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.courses')),
            ],
            options={
                'verbose_name': 'Course Unit',
                'verbose_name_plural': 'Course Units',
            },
        ),
        migrations.CreateModel(
            name='Departments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Department_name', models.CharField(max_length=100, unique=True)),
                ('department_id', models.IntegerField(unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='LessonsDuration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.CharField(max_length=150)),
                ('end_time', models.CharField(max_length=150)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Lessons Duration',
                'verbose_name_plural': 'Lessons Durations',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('module_name', models.CharField(max_length=50)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Module',
                'verbose_name_plural': 'Modules',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('school_of_Name', models.CharField(max_length=100, unique=True)),
                ('Registration_Date', models.DateField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'School',
                'verbose_name_plural': 'Schools ',
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester_name', models.CharField(max_length=50)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Semester',
                'verbose_name_plural': 'Semesters',
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_year', models.IntegerField(unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'session',
                'verbose_name_plural': 'sessions',
            },
        ),
        migrations.CreateModel(
            name='SpecificStudentAnnouncement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('registration_number', models.IntegerField()),
                ('title', models.CharField(max_length=150)),
                ('announcement', models.TextField(max_length=1000)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Specific Student Announcement',
                'verbose_name_plural': 'Specific Students Announcements',
            },
        ),
        migrations.CreateModel(
            name='Term',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=100, unique=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Term',
                'verbose_name_plural': 'Terms',
            },
        ),
        migrations.CreateModel(
            name='UploadedAssignments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_code', models.IntegerField()),
                ('file', models.FileField(upload_to='student_uploads')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.classes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Uploaded Assignment',
                'verbose_name_plural': 'Uploaded Assignments',
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Mon', 'Mon'), ('Tue', 'Tue'), ('Wed', 'Wed'), ('Thu', 'Thu'), ('Fri', 'Fri'), ('Sat', 'Sat'), ('Sun', 'Sun')], max_length=100)),
                ('lecturer_name', models.CharField(max_length=150)),
                ('lecturer_number', models.IntegerField()),
                ('room', models.CharField(blank=True, max_length=150, null=True)),
                ('class_link', models.URLField(blank=True, max_length=400, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('class_ID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.classes')),
                ('time_dulation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.lessonsduration')),
                ('unit_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.courseunit')),
            ],
            options={
                'verbose_name': 'Timetable',
                'verbose_name_plural': 'Timetables',
            },
        ),
        migrations.CreateModel(
            name='SpecificClassAnnouncement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('announcement', models.TextField(max_length=1000)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.classes')),
            ],
            options={
                'verbose_name': 'Specific Class Announcement',
                'verbose_name_plural': 'Specific Class Announcements',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('School_name', models.CharField(max_length=100)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('session_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.session')),
                ('term', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.term')),
            ],
            options={
                'verbose_name': 'Setting',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='ScheduleOnlineClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.CharField(choices=[('Mon', 'Mon'), ('Tue', 'Tue'), ('Wed', 'Wed'), ('Thu', 'Thu'), ('Fri', 'Fri'), ('Sat', 'Sat'), ('Sun', 'Sun')], max_length=50)),
                ('time', models.CharField(max_length=50)),
                ('unit', models.CharField(max_length=50)),
                ('class_link', models.URLField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('target_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.classes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Online Class',
                'verbose_name_plural': 'Online Classes',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('picture', models.ImageField(default='np_pic.png', upload_to='pics')),
                ('studied_at', models.CharField(blank=True, max_length=200, null=True)),
                ('county', models.CharField(blank=True, max_length=200, null=True)),
                ('location', models.CharField(blank=True, max_length=200, null=True)),
                ('my_profile', models.CharField(blank=True, max_length=200, null=True)),
                ('phone', models.CharField(blank=True, max_length=200, null=True)),
                ('occupation', models.CharField(blank=True, max_length=200, null=True)),
                ('education', models.CharField(blank=True, max_length=200, null=True)),
                ('skills', models.CharField(blank=True, max_length=200, null=True)),
                ('notes', models.CharField(blank=True, max_length=200, null=True)),
                ('country', django_countries.fields.CountryField(blank=True, max_length=2, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OnlineApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=50)),
                ('first_name', models.CharField(max_length=50)),
                ('other_names', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=50)),
                ('dob', models.DateField()),
                ('nationality', models.CharField(max_length=50)),
                ('national_id', models.IntegerField(blank=True, null=True)),
                ('county', models.CharField(max_length=50)),
                ('district', models.CharField(blank=True, max_length=50, null=True)),
                ('town', models.CharField(blank=True, max_length=50, null=True)),
                ('course_applied_for', models.CharField(choices=[('DIPLOMA', 'DIPLOMA'), ('CERTIFICATE', 'CERTIFICATE'), ('ARTISAN/PROF', 'ARTISAN/PROF')], max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('parent_or_guardian_tel', models.IntegerField()),
                ('student_tel', models.IntegerField()),
                ('approved', models.BooleanField(default=False)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('course_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.courses')),
            ],
            options={
                'verbose_name': 'Online Application',
                'verbose_name_plural': 'Online Applications',
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(max_length=1000)),
                ('reply', models.TextField(max_length=300)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Message',
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.CreateModel(
            name='GenerateNotice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('description', models.TextField(max_length=500)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Generate Notice',
                'verbose_name_plural': 'Generate Notices',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('student_registration_number', models.IntegerField()),
                ('unit_name', models.CharField(max_length=50)),
                ('cat_marks', models.IntegerField(blank=True, default=0, null=True)),
                ('end_term_marks', models.IntegerField(blank=True, default=0, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.module')),
                ('term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.term')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Exam Result',
                'verbose_name_plural': 'Exam Results',
            },
        ),
        migrations.CreateModel(
            name='ElearningLibraryResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(max_length=50)),
                ('typed_notes', models.TextField(max_length=1000)),
                ('file', models.FileField(blank=True, null=True, upload_to='files')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.courses')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Elearning Library Resource',
                'verbose_name_plural': 'Elearning Library Resources',
            },
        ),
        migrations.CreateModel(
            name='DepartmentalStudentAnnouncement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('announcement', models.TextField(max_length=1000)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('department', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.departments')),
            ],
            options={
                'verbose_name': 'Students Departmental Announcement',
                'verbose_name_plural': ' Students Departmental Announcements',
            },
        ),
        migrations.AddField(
            model_name='courseunit',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.module'),
        ),
        migrations.AddField(
            model_name='courses',
            name='school_of',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.school'),
        ),
        migrations.CreateModel(
            name='AuditTrail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('item', models.TextField(max_length=300)),
                ('date', models.CharField(max_length=400)),
                ('page', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Audit Trail',
                'verbose_name_plural': 'Audit Trail ',
            },
        ),
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assignment_title', models.CharField(max_length=50)),
                ('assignment_instructions', models.TextField(max_length=700)),
                ('questions', models.TextField(blank=True, max_length=1000, null=True)),
                ('file', models.FileField(blank=True, max_length=1000, null=True, upload_to='files')),
                ('deadline', models.DateField()),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('to_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='accounts.classes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assignment',
                'verbose_name_plural': 'Assignments',
            },
        ),
        migrations.CreateModel(
            name='AccountsLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('item', models.CharField(max_length=300)),
                ('date', models.CharField(max_length=400)),
                ('page', models.CharField(max_length=1000)),
                ('description', models.TextField(max_length=1000)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Accounts Log',
                'verbose_name_plural': 'Accounts Logs ',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='class_assigned',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.classes'),
        ),
        migrations.AddField(
            model_name='user',
            name='course_assigned',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.courses'),
        ),
        migrations.AddField(
            model_name='user',
            name='department',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='accounts.departments'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='module',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.module'),
        ),
        migrations.AddField(
            model_name='user',
            name='semester',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.semester'),
        ),
        migrations.AddField(
            model_name='user',
            name='student_term',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.term'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
